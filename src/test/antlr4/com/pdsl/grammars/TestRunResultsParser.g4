parser grammar TestRunResultsParser ;

//import GherkinCommonParser;

options { tokenVocab=TestRunResultsLexer ; }

givenAnotherTestResource : GIVEN_ANOTHER_TEST_RESOURCE ;
thenTestCaseCollectionHasSpecifiedTestCases : THEN_TEST_TEST_CASE_COLLECTION_HAS_N_TEST_CASES_START ;
convertTestResourcesToCollectionWithSingleTestCase : WHEN_THE_TEST_RESOURCE_IS_CONVERTED_TO_A_SINGLE_TEST_CASE_BY_SOME_METHOD ;

givenTheSpecifiedGrammarParseTreeListener : GIVEN_THE_GRAMMAR_PARSE_TREE_LISTENER ;
thenSingleTestCaseIsProduced: THEN_A_SINGLE_TEST_CASE_IS_PRODUCED ;

thenTheTestRunResultHasSpecifiedFilteredDuplicateTests : THEN_THE_TEST_RUN_RESULT_HAS  FILTERED_DUPLICATE_TESTS_END ;
thenTheTestRunResultHasSpecifiedPassingPhrases : THEN_THE_TEST_RUN_RESULT_HAS  PASSING_PHRASES_END ;
thenTheTestRunResultHasSpecifiedTotalPhrases : THEN_THE_TEST_RUN_RESULT_HAS TOTAL_PHRASES_END ;

whenTheTestMetadataIsRetrievedFromTheTestRunResult  :WHEN_THE_TEST_METADATA_IS_RETRIEVED_FROM_THE_TEST_RUN_RESULT ;
whenTheOnlyTestMetadataItemIsExamined : WHEN_THE_ONLY_TEST_METADATA_ITEM_IS_EXAMINED ;
thenTheTestMetadataHasAnExceptionExplainingWhyTheTestFailed : THEN_THE_TEST_METADATA_HAS_AN_EXCEPTION_EXPLAINING_WHY_THE_TEST_FAILED ;
thenTheTestMetadataHasThePhraseThatFailed : THEN_THE_TEST_METADATA_HAS_THE_PHRASE_THAT_FAILED ;
thenTheTestMetadataFailingPhraseIsSpecifiedText : THEN_THE_TEST_METADATA_FAILING_PHRASE_IS ;

thenTheTestMetadataHasOneItemInIt : THEN_THE_TEST_METADATA_HAS_ONE_ITEM_IN_IT ;
